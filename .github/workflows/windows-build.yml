name: Manual Windows Build
on:
  workflow_dispatch:
    { }

jobs:
  windows-build:
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Update Licenses file
        run: ./gradlew desktopApp:exportLibraryDefinitions "-PaboutLibraries.exportPath=src/main/resources/"

      - name: Create path variables
        id: path_variables
        shell: pwsh
        run: |
          $tag = $(git describe --tags --abbrev=0 --match "*-desktop")
          $version = $tag -replace '-desktop$', ''
          $name_msi = "FeedFlow-${version}.msi"
          $path_msi = "desktopApp/build/release/main-release/msi/${name}"
          $name_exe = "FeedFlow-${version}.exe"
          $path_exe = "desktopApp/build/release/main-release/exe/${name}"
          "TAG=$tag" >> $env:GITHUB_ENV
          "VERSION=$version" >> $env:GITHUB_ENV
          "RELEASE_PATH_MSI=$path_msi" >> $env:GITHUB_ENV
          "NAME_MSI=$name_msi" >> $env:GITHUB_ENV
          "RELEASE_PATH_EXE=$path_exe" >> $env:GITHUB_ENV
          "NAME_EXE=$name_exe" >> $env:GITHUB_ENV

      - name: Create Properties file
        shell: pwsh
        run: |
          "is_release=true" >> desktopApp/src/jvmMain/resources/props.properties
          "sentry_dns=$env:SENTRY_DNS" >> desktopApp/src/jvmMain/resources/props.properties
          "version=$env:VERSION" >> desktopApp/src/jvmMain/resources/props.properties
          "dropbox_key=$env:DROPBOX_API_KEY" >> desktopApp/src/jvmMain/resources/props.properties
        env:
          SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
          VERSION: ${{ env.VERSION }}
          DROPBOX_API_KEY: ${{ secrets.DROPBOX_API_KEY }}

      - name: Create MSI
        run: ./gradlew packageReleaseMsi packageReleaseExe

      - name: Upload asset msi
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_MSI }}
          name: ${{ env.NAME_MSI }}

      - name: Upload asset exe
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_EXE }}
          name: ${{ env.NAME_EXE }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*  
